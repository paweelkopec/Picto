package pictodisplayer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import pictodisplayer.*;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.border.LineBorder;
import pictodisplayer.db.Page;
import pictodisplayer.db.Picto;
import pictodisplayer.db.Pictodb;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author Pawel Kopec <paweelkopec@gmail.com>
 */
public class Projector extends javax.swing.JFrame {

    Page page;
    Picto pictos[];
    Integer currentImage;
    Timer timer;
    ImagePanel imagePane;

    /**
     * Creates new form Projector
     */
    public Projector() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
        }
        initComponents();
        this.loadImages(3);
        this.currentImage = 0;
        init();
        imagePane = new ImagePanel();
        this.slectedPictos.add(new JScrollPane(imagePane));
    }

    public void init() {
        try {
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    start();
                }
            };
            start();
            timer = new Timer(2000, taskPerformer);
            timer.start();
        } catch (Exception e) {
        }
    }

    /**
     * Creates new form Projector
     */
    public Projector(Page page) {
        this.page = page;
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
        }
        initComponents();
        this.loadImages(this.page.id);
        this.currentImage = 0;
        init();
        imagePane = new ImagePanel();
        this.slectedPictos.add(new JScrollPane(imagePane));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        panelDisplay = new javax.swing.JPanel();
        labelDisplay = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pauze = new javax.swing.JToggleButton();
        reset = new javax.swing.JButton();
        speed = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        slectedPictos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        panelDisplay.setBorder(javax.swing.BorderFactory.createTitledBorder("Wybór Obrazka"));
        panelDisplay.setPreferredSize(new java.awt.Dimension(15, 300));
        panelDisplay.setLayout(new java.awt.BorderLayout());

        labelDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDisplay.setAlignmentY(0.0F);
        labelDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelDisplayMouseClicked(evt);
            }
        });
        panelDisplay.add(labelDisplay, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Operacje"));

        pauze.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pauze.setText("Pauza");
        pauze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauzeActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reset.setText("Wyczyść");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        speed.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "300", "400", "500", "600", "700", "800", "900", "1000", "1500", "2000", "2500", "3000", "3500", "4000", "4500", "5000" }));
        speed.setSelectedIndex(9);
        speed.setToolTipText("");
        speed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedActionPerformed(evt);
            }
        });

        jLabel1.setText("Szybkość Wyświetlania [ms]");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(speed, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pauze, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pauze, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        slectedPictos.setBorder(javax.swing.BorderFactory.createTitledBorder("Wybrane Piktogramy"));
        slectedPictos.setToolTipText("");
        slectedPictos.setPreferredSize(new java.awt.Dimension(12, 600));
        slectedPictos.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(slectedPictos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(slectedPictos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pauzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauzeActionPerformed

        if (this.pauze.isSelected()) {
            this.timer.stop();
        } else {
            this.timer.start();
        }
    }//GEN-LAST:event_pauzeActionPerformed

    private void speedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedActionPerformed
        String value = (String) this.speed.getSelectedItem();
        this.timer.setDelay(Integer.parseInt(value));
    }//GEN-LAST:event_speedActionPerformed

    private void labelDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelDisplayMouseClicked
        try {
            Integer i = this.currentImage - 1;
            ImageIcon icon = new ImageIcon("C:\\PictoDisplayer\\" + this.pictos[i].fileName);
            JLabel label = new JLabel(icon);
            label.setText(this.pictos[i].fileName);
            label.setHorizontalTextPosition(JLabel.CENTER);
            label.setVerticalTextPosition(JLabel.BOTTOM);
            label.setBorder(new LineBorder(Color.WHITE));
            imagePane.add(label);
            imagePane.revalidate();
            this.pictos[i].increaseStats();
        } catch (Exception e) {
            System.out.println("Error - " + e.toString());
        }
    }//GEN-LAST:event_labelDisplayMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        this.imagePane.removeAll();
        this.imagePane.revalidate();
        this.imagePane.repaint();
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Projector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Projector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Projector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Projector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Projector().setVisible(true);
            }
        });
    }

    private void start() {
        try {
            if (this.currentImage >= this.pictos.length) {
                this.currentImage = 0;
            }
            ImageIcon icon = new ImageIcon("C:\\PictoDisplayer\\" + this.pictos[this.currentImage].fileName);
            this.labelDisplay.removeAll();
            this.labelDisplay.setIcon(icon);
            this.labelDisplay.revalidate();
            this.currentImage += 1;
        } catch (Exception e) {

            System.out.println("Erroaar - " + e.toString());
        }
    }

    private void loadImages(Integer PageId) {
        try {

            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection conn = DriverManager.getConnection(Pictodb.getName());

            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rec = st.executeQuery("SELECT * FROM pictos WHERE pid=" + PageId + " ORDER BY stats DESC");
            int rows = 0;
            if (rec.last()) {
                rows = rec.getRow();
                rec.beforeFirst();
            }
            this.pictos = new Picto[rows];
            Integer i = 0;
            while (rec.next()) {
                System.out.println(rec.getInt("stats"));
                pictos[i] = new Picto(rec);
                i++;
            }
            st.close();
        } catch (Exception e) {
            System.out.println("Error - " + e.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelDisplay;
    private javax.swing.JPanel panelDisplay;
    private javax.swing.JToggleButton pauze;
    private javax.swing.JButton reset;
    private javax.swing.JPanel slectedPictos;
    private javax.swing.JComboBox speed;
    // End of variables declaration//GEN-END:variables
}
