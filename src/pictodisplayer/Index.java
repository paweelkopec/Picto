/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pictodisplayer;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import pictodisplayer.db.Pictodb;
/**
 *
 * @author Pawe≈Ç
 */
public class Index extends javax.swing.JFrame {

    protected static Pictodb db;
    /**
     * Creates new form Index
     */
    public Index() {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("UIManager Exception : " + e);
        }
        createTree();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTree = new javax.swing.JTree();
        nowaKategoria = new javax.swing.JButton();
        containerPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kategorie"));

        categoryTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode));
        categoryTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                categoryTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(categoryTree);

        nowaKategoria.setActionCommand("Nowa Kategoria");
        nowaKategoria.setLabel("Nowa Kategoria");
        nowaKategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowaKategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nowaKategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(nowaKategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE))
        );

        containerPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nowaKategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowaKategoriaActionPerformed
        // TODO add your handling code here:
        NewCategory nowaKategoria = new NewCategory();
        nowaKategoria.setDb(this.db);
        nowaKategoria.setIndex(this);
        nowaKategoria.setVisible(true);
    }//GEN-LAST:event_nowaKategoriaActionPerformed

    private void categoryTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_categoryTreeValueChanged
        // TODO add your handling code here:
           TreePath path = categoryTree.getSelectionPath();
           System.out.println("kategoria glowna "); 
           
           try{
               DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)  path.getLastPathComponent();
           }catch(Exception e){
            System.out.println("Error -"+e); 
            return;
          }
           
           DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)  path.getLastPathComponent();
           Object userObject = selectedNode.getUserObject();
           
           selectedNode.getParent();

            if(path.toString().equals("[Kategorie]")){
               System.out.println("kategoria glowna "); 
            }else if( selectedNode.getParent().toString().equals("Kategorie")){
               //kategoria
               containerPanel.removeAll();
               CategoryPanel cP = new CategoryPanel(selectedNode.getUserObject().toString());
               cP.setIndex(this);
               containerPanel.add(cP);
               containerPanel.invalidate();
               containerPanel.repaint();
               CardLayout cl = (CardLayout)(containerPanel.getLayout());
               cl.next(containerPanel);
               
               System.out.println("kategoria " + selectedNode.getUserObject());
           }
           else if(!selectedNode.getParent().toString().equals("Kategorie")){
               System.out.println("strona" + selectedNode.getUserObject());
               //strona
               containerPanel.removeAll();
               PagePanel pP = new PagePanel(selectedNode.getUserObject().toString());
               pP.setIndex(this);
               containerPanel.add(pP);
               containerPanel.invalidate();
               containerPanel.repaint();
               CardLayout cl = (CardLayout)(containerPanel.getLayout());
               cl.next(containerPanel);
           }
    }//GEN-LAST:event_categoryTreeValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
                
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree categoryTree;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nowaKategoria;
    // End of variables declaration//GEN-END:variables

    private static javax.swing.tree.DefaultMutableTreeNode treeNode;
    
    public static void createTree(){

       treeNode = new javax.swing.tree.DefaultMutableTreeNode("Kategorie");
       try {
            
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection conn = DriverManager.getConnection(Pictodb.getName());
            
         
            
            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            Statement st2 = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ResultSet rec = st.executeQuery("SELECT * FROM categories ORDER BY sort, name ASC");
            int rows =0;
            if ( rec.last()) {
                 rows = rec.getRow();
                rec.beforeFirst();
            }
             ResultSet rec2 = st2.executeQuery("SELECT * FROM pages");
            int rows2 =0;
            if ( rec2.last()) {
                 rows2 = rec2.getRow();
                rec2.beforeFirst();
            }

            javax.swing.tree.DefaultMutableTreeNode[] nodes = new javax.swing.tree.DefaultMutableTreeNode[rows];
            javax.swing.tree.DefaultMutableTreeNode[] pages = new javax.swing.tree.DefaultMutableTreeNode[rows2];
            Integer i=0;
            Integer j=0;
            while (rec.next()) {
                System.out.println("-" + rec.getString("name")+"-" );
                nodes[i]  = new javax.swing.tree.DefaultMutableTreeNode(rec.getString("name"));
                ResultSet rec3 = st2.executeQuery("SELECT * FROM pages WHERE cid="+rec.getInt("id")+" ORDER BY sort, name ASC");
                while (rec3.next()) {
                     System.out.println("-" + rec3.getString("name")+"-" );
                      pages[j]  = new javax.swing.tree.DefaultMutableTreeNode(rec3.getString("name"));
                      nodes[i].add(pages[j]);
                      j++;
                }
                treeNode.add(nodes[i]);
                i++;
            }
            st.close();
        } catch (Exception e) {
            
            System.out.println("Error - " + e.toString());
        }

//        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("colors");
//        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("blue");
//        treeNode2.add(treeNode3);

    }
       public void reLoadTree() {       
           createTree();
           categoryTree.removeAll();
           categoryTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode));
           categoryTree.addTreeSelectionListener(null);
           
       }
       
//       public void valueChanged(TreeSelectionEvent e) {
//           System.out.println("Error - " );
//           DefaultMutableTreeNode node = treeNode;
//           jTree1.getLastSelectedPathComponent();
//           if (node == null) return;
//           
//           Object nodeInfo = node.getUserObject();
//
//       }
}
